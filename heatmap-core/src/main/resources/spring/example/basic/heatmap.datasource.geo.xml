<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc
		http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- ############# Transaction management access. ############# -->

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- <tx:annotation-driven /> -->


	<!-- ############# MyBatis. ############# -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="
			de.uniwue.dmir.heatmap.impl.core.data.source.geo.database.mapper" />
	</bean>
	
	<!-- ############# Enable and use component scan. ############# -->

	<!-- Enable things like "@Autowired" and "@Component" annotations. -->
<!-- 	<context:annotation-config /> -->

	<!-- Recursively (!) scans the classpath of this application for @Components to deploy as beans. -->
<!-- 	<context:component-scan base-package="" /> -->
	
	<!-- ############# Data sources. ############# -->
	
	<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName"	value="${db.core.driver}" />
		<property name="url"				value="${db.core.url}" />
		<property name="username"			value="${db.core.user}" />
		<property name="password"			value="${db.core.password}" />
	</bean>
	
	<bean id="geoDataSource"
			class="de.uniwue.dmir.heatmap.impl.core.data.source.geo.database.DatabaseGeoDataSource">
		<constructor-arg name="request" ref="request" />
	</bean>
	
	<bean id="abstractRequest" 
			class="de.uniwue.dmir.heatmap.impl.core.data.source.geo.database.RequestGeo" 
			abstract="true">
			
		<constructor-arg name="table" value="data_airprobe" />
		<constructor-arg name="longitudeAttribute" value="geo_lon" />
		<constructor-arg name="latitudeAttribute" value="geo_lat" />
	</bean>
	
	<bean id="request" parent="abstractRequest" />
	
	<beans profile="minmax">
	
		<bean id="dateFactory" class="java.text.SimpleDateFormat">
			<constructor-arg name="pattern" value="yyyy-MM-dd HH:mm:ss" />
		</bean>
		
		<bean id="min" factory-bean="dateFactory" factory-method="parse">
			<constructor-arg value="#{systemProperties.min}" />
		</bean>
		
		<bean id="max" factory-bean="dateFactory" factory-method="parse">
			<constructor-arg value="#{systemProperties.max}" />
		</bean>
	
		<bean id="request" parent="abstractRequest" >
			<property name="timestampAttribute" value="meta_timestamp_received" />
			<property name="minimumTimestamp" ref="min" />
			<property name="maximumTimestamp" ref="max" />
		</bean>
	</beans>
	
</beans>