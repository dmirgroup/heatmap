<?xml version="1.0" encoding="UTF-8"?>
<beans 
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--Loading properties. -->
	<bean class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>#{systemProperties.configDir}/config.default.properties</value>
				<value>#{systemProperties.configDir}/config.properties</value>
			</list>
		</property>
		<property name="order" value="150" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
	</bean>


	<!-- ############# Transaction management access. ############# -->

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- <tx:annotation-driven /> -->


	<!-- ############# MyBatis. ############# -->

	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="mapperLocations" >
			<list>
				<value>#{systemProperties.configDir}/geo.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
		<property name="basePackage" value="
			de.uniwue.dmir.heatmap.impl.core.mybatis" />
	</bean>
	
	<!-- ############# Enable and use component scan. ############# -->

	<!-- Enable things like "@Autowired" and "@Component" annotations. -->
<!-- 	<context:annotation-config /> -->

	<!-- Recursively (!) scans the classpath of this application for @Components to deploy as beans. -->
<!-- 	<context:component-scan base-package="" /> -->
	
	<!-- ############# Data sources. ############# -->
	
	<bean id="dataSource"
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">

		<property name="driverClassName"	value="${db.core.driver}" />
		<property name="url"				value="${db.core.url}" />
		<property name="username"			value="${db.core.user}" />
		<property name="password"			value="${db.core.password}" />
	</bean>










	<bean id="geoPolygonAntwerp"
			class="de.uniwue.dmir.heatmap.util.beans.GeoPolygonFactoryBean">

		<constructor-arg name="resource" value="${polygon.file.antwerp}" />
	</bean>
	
	<bean id="geoPolygonKassel"
			class="de.uniwue.dmir.heatmap.util.beans.GeoPolygonFactoryBean">
	
		<constructor-arg name="resource" value="${polygon.file.kassel}" />
	</bean>
	
	<bean id="geoPolygonLondon"
			class="de.uniwue.dmir.heatmap.util.beans.GeoPolygonFactoryBean">

		<constructor-arg name="resource" value="${polygon.file.london}" />
	</bean>
	
	<bean id="geoPolygonTurin"
			class="de.uniwue.dmir.heatmap.util.beans.GeoPolygonFactoryBean">

		<constructor-arg name="resource" value="${polygon.file.turin}" />
	</bean>
	
	<bean id="abstractTileSize"
			class="de.uniwue.dmir.heatmap.util.beans.EquidistantProjectionTileSizeFactoryBean"
			abstract="true">
			
		<constructor-arg name="widthMeters" value="${width.meters}" />
		<constructor-arg name="heightMeters" value="${height.meters}" />
		<constructor-arg name="northReference" value="${north.reference}" />
		<constructor-arg name="distanceFunction">
			<bean class="de.uniwue.dmir.heatmap.processors.visualizers.rbf.distances.GreatCircleDistance.Haversine" />
		</constructor-arg>	
	</bean>
	
	<bean id="tileSizeAntwerp" parent="abstractTileSize">
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonAntwerp.geoBoundingBox}" />
	</bean>
	
	<bean id="tileSizeKassel" parent="abstractTileSize">
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonKassel.geoBoundingBox}" />
	</bean>
	
	<bean id="tileSizeLondon" parent="abstractTileSize">
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonLondon.geoBoundingBox}" />
	</bean>
	
	<bean id="tileSizeTurin" parent="abstractTileSize">
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonTurin.geoBoundingBox}" />
	</bean>

	<bean id="projectionAntwerp"
			class="de.uniwue.dmir.heatmap.point.sources.geo.projections.EquidistantProjection">
	
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonAntwerp.geoBoundingBox}" />	
		<constructor-arg name="tileSize" ref="tileSizeAntwerp" />	
	</bean>
	
	<bean id="projectionKassel"
			class="de.uniwue.dmir.heatmap.point.sources.geo.projections.EquidistantProjection">
	
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonKassel.geoBoundingBox}" />	
		<constructor-arg name="tileSize" ref="tileSizeKassel" />	
	</bean>
	
	<bean id="projectionLondon"
			class="de.uniwue.dmir.heatmap.point.sources.geo.projections.EquidistantProjection">
	
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonLondon.geoBoundingBox}" />	
		<constructor-arg name="tileSize" ref="tileSizeLondon" />	
	</bean>
	
	<bean id="projectionTurin"
			class="de.uniwue.dmir.heatmap.point.sources.geo.projections.EquidistantProjection">
	
		<constructor-arg name="geoBoundingBox" value="#{geoPolygonTurin.geoBoundingBox}" />	
		<constructor-arg name="tileSize" ref="tileSizeTurin" />	
	</bean>

	<bean id="polygonAntwerp" class="de.uniwue.dmir.heatmap.util.beans.PolygonFromGeoPolygonFacoryBean">
		<constructor-arg name="geoPolygon" ref="geoPolygonAntwerp" />
		<constructor-arg name="mapProjection" ref="projectionAntwerp" />
		<constructor-arg name="tileCoordinates" >
			<null />
		</constructor-arg>
	</bean>
	
	<bean id="polygonKassel" class="de.uniwue.dmir.heatmap.util.beans.PolygonFromGeoPolygonFacoryBean">
		<constructor-arg name="geoPolygon" ref="geoPolygonKassel" />
		<constructor-arg name="mapProjection" ref="projectionKassel" />
		<constructor-arg name="tileCoordinates" >
			<null />
		</constructor-arg>
	</bean>
	
	<bean id="polygonLondon" class="de.uniwue.dmir.heatmap.util.beans.PolygonFromGeoPolygonFacoryBean">
		<constructor-arg name="geoPolygon" ref="geoPolygonLondon" />
		<constructor-arg name="mapProjection" ref="projectionLondon" />
		<constructor-arg name="tileCoordinates" >
			<null />
		</constructor-arg>
	</bean>
	
	<bean id="polygonTurin" class="de.uniwue.dmir.heatmap.util.beans.PolygonFromGeoPolygonFacoryBean">
		<constructor-arg name="geoPolygon" ref="geoPolygonTurin" />
		<constructor-arg name="mapProjection" ref="projectionTurin" />
		<constructor-arg name="tileCoordinates" >
			<null />
		</constructor-arg>
	</bean>









	<bean id="tileSize"
			class ="de.uniwue.dmir.heatmap.core.TileSize">
	
		<constructor-arg name="width" value="256" />
		<constructor-arg name="height" value="256" />
	</bean>

	<bean id="projection"
			class="de.uniwue.dmir.heatmap.point.sources.geo.projections.NullProjection">
	</bean>

	<bean id="geoDatasource" 
			class="de.uniwue.dmir.heatmap.point.sources.geo.datasources.DatabaseGeoDatasource">
	
		<constructor-arg name="settings" ref="geoSettings" />		
	</bean>
	
		
<!-- 	<bean id="geoDatasource"
			class="de.uniwue.dmir.heatmap.impl.core.data.source.geo.CsvGeoDataSource">
		<constructor-arg name="file" value="src/test/resources/test_london.txt" />
		<constructor-arg name="separator" value="," />
		<constructor-arg name="skipFirstLine" value="false" />
	</bean> -->
	
	<bean id="tileDatasource" 
			class="de.uniwue.dmir.heatmap.point.sources.GeoPointsource">
		
		<constructor-arg name="geoDatasource" ref="geoDatasource" />
		<constructor-arg name="projection" ref="projection" />
		<constructor-arg name="toGeoCoordinatesMapper">
			<bean class="de.uniwue.dmir.heatmap.point.types.geo.GeoPointToGeoCoordinateMapper" />
		</constructor-arg>
	</bean>
	
	<bean id="dateFactory" class="java.text.SimpleDateFormat">
		<constructor-arg name="pattern" value="yyyy-MM-dd HH:mm:ss" />
	</bean>
	
	<bean id="minimumTimestampReceived" factory-bean="dateFactory" factory-method="parse">
		<constructor-arg value="${timestamp.received.min}" />
	</bean>
	
	<bean id="maximumTimestampReceived" factory-bean="dateFactory" factory-method="parse">
		<constructor-arg value="${timestamp.received.max}" />
	</bean>
	
		<bean id="minimumTimestampRecorded" factory-bean="dateFactory" factory-method="parse">
		<constructor-arg value="${timestamp.recorded.min}" />
	</bean>
	
	<bean id="maximumTimestampRecorded" factory-bean="dateFactory" factory-method="parse">
		<constructor-arg value="${timestamp.recorded.max}" />
	</bean>
	
	
	<bean id="userToGroupMapper" class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
		<constructor-arg name="map">
			<bean class="de.uniwue.dmir.heatmap.util.beans.MapFactoryBean">
				<constructor-arg name="mapIdentifier" value="apic2013-user2group" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="deviceToGroupMapper" class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
		<constructor-arg name="map">
			<bean class="de.uniwue.dmir.heatmap.util.beans.MapFactoryBean">
				<constructor-arg name="mapIdentifier" value="apic2013-device2group" />
			</bean>
		</constructor-arg>
	</bean>
	
	<bean id="macToGroupMapper" class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
		<constructor-arg name="map">
			<bean class="de.uniwue.dmir.heatmap.util.beans.MapFactoryBean">
				<constructor-arg name="mapIdentifier" value="apic2013-mac2group" />
			</bean>
		</constructor-arg>
	</bean>

	<bean id="pointToGroupMapper" 
			class="de.uniwue.dmir.heatmap.filters.apic.PointToGroupMapper">
	
		<constructor-arg name="userToGroupMapper" ref="userToGroupMapper" />
		<constructor-arg name="deviceToGroupMapper" ref="deviceToGroupMapper" />
		<constructor-arg name="macToGroupMapper" ref="macToGroupMapper" />
	
	</bean>
	
	<bean id="groupToCityMapper" class="de.uniwue.dmir.heatmap.util.mapper.MapperPipe">
		<constructor-arg name="mappers">
			<list>
				<bean class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
					<constructor-arg name="map">
						<bean class="de.uniwue.dmir.heatmap.util.beans.MapFactoryBean">
							<constructor-arg name="mapIdentifier" value="apic2013-group2city" />
						</bean>
					</constructor-arg>
				</bean>
				<bean class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
					<constructor-arg name="map">
						<bean class="de.uniwue.dmir.heatmap.util.beans.MapFactoryBean">
							<constructor-arg name="mapIdentifier" value="apic2013-mac2city" />
						</bean>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="cityToAreaMap" 
			class="java.util.HashMap">
		<constructor-arg name="m">
			<map key-type="java.lang.String" value-type="java.awt.geom.Path2D">
				<entry key="Antwerp" value="#{geoPolygonAntwerp.getPath2DLonLat()}" />
				<entry key="Kassel" value="#{geoPolygonKassel.getPath2DLonLat()}" />
				<entry key="London" value="#{geoPolygonLondon.getPath2DLonLat()}" />
				<entry key="Turin" value="#{geoPolygonTurin.getPath2DLonLat()}" />
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="cityToGeoPolygonMap" class="java.util.HashMap">
		<constructor-arg name="m">
			<map key-type="java.lang.String" value-type="de.uniwue.dmir.heatmap.core.util.GeoPolygon">
				<entry key="Antwerp" value-ref="geoPolygonAntwerp" />
				<entry key="Kassel" value-ref="geoPolygonKassel" />
				<entry key="London" value-ref="geoPolygonLondon" />
				<entry key="Turin" value-ref="geoPolygonTurin" />
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="cityToMapProjectionMapper" 
			class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
			
		<constructor-arg name="map">
			<map>
				<entry key="Antwerp" value-ref="projectionAntwerp" />
				<entry key="Kassel" value-ref="projectionKassel" />
				<entry key="London" value-ref="projectionLondon"  />
				<entry key="Turin" value-ref="projectionTurin"  />
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="pointToCityMapper"
			class="de.uniwue.dmir.heatmap.filters.apic.PointToCityMapper">
			
		<constructor-arg name="cityToPath2DMap" ref="cityToAreaMap" />
	</bean>
	
	<bean id="cityToPolygonMapper"
			class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
			
		<constructor-arg name="map" >
			<map>
				<entry key="Antwerp" value-ref="polygonAntwerp" />
				<entry key="Kassel" value-ref="polygonKassel" />
				<entry key="London" value-ref="polygonLondon" />
				<entry key="Turin" value-ref="polygonTurin" />
			</map>
		</constructor-arg>
	</bean>
	
	<bean id="filter" 
			class="de.uniwue.dmir.heatmap.filters.ApicPointFilter">
		
		<constructor-arg name="limitToCityBounds" value="false" />
		
		<constructor-arg name="minimumTimestampRecorded" ref="minimumTimestampRecorded" />	
		<constructor-arg name="maximumTimestampRecorded" ref="maximumTimestampRecorded" />	
		
		<constructor-arg name="pointToGroupMapper" ref="pointToGroupMapper" />
		<constructor-arg name="pointToCityMapper" ref="pointToCityMapper" />
		<constructor-arg name="groupToCityMapper" ref="groupToCityMapper" />
		<constructor-arg name="cityToGeoPolygonMapper" >
			<bean class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
				<constructor-arg name="map" ref="cityToGeoPolygonMap" />
			</bean>
		</constructor-arg>
		<constructor-arg name="cityToMapProjectionMapper" ref="cityToMapProjectionMapper" />
		
	</bean>
	
	<bean id="tileFactory" 
			class="de.uniwue.dmir.heatmap.tiles.factories.ApicTileFactory" />

	<bean id="zoomLevelRange"
			class="de.uniwue.dmir.heatmap.ZoomLevelRange">
		<constructor-arg name="min" value="0" />
		<constructor-arg name="max" value="0" />
	</bean>

	<bean id="heatmapSettings"
			class="de.uniwue.dmir.heatmap.HeatmapSettings" >
		<property name="zoomLevelRange" ref="zoomLevelRange" />
		<property name="tileSize" ref="tileSize" />
	</bean>

	<bean id="heatmap" 
			class="de.uniwue.dmir.heatmap.heatmaps.DefaultHeatmap">
	
		<constructor-arg name="tileFactory" ref="tileFactory" />
		<constructor-arg name="dataSource" ref="tileDatasource" />
		<constructor-arg name="filter" ref="filter" />
		<constructor-arg name="settings" ref="heatmapSettings" />
	</bean>

	<!-- Preparing point visualizer. -->
	<bean id="colorImage"
			class="de.uniwue.dmir.heatmap.util.beans.BufferedImageFactoryBean">

		<constructor-arg name="resource" value="${color.image}" />
	</bean>
	
	<bean id="ranges"
			class="de.uniwue.dmir.heatmap.util.beans.RangeFactoryBean">

		<constructor-arg name="min" value="${range.min}" />
		<constructor-arg name="max" value="${range.max}" />
		<constructor-arg name="image" ref="colorImage" />
	</bean>
	
	<bean id="simpleVisualizer"
			class="de.uniwue.dmir.heatmap.processors.visualizers.SimpleVisualizer">
			
		<constructor-arg name="pixelIteratorFactory">
			<bean class="de.uniwue.dmir.heatmap.util.iterator.MapKeyValueIteratorFactory" />
		</constructor-arg>

		<constructor-arg name="colorPipe">
			<bean class="de.uniwue.dmir.heatmap.processors.visualizers.color.CombinedColorPipe">
				<constructor-arg name="colorPipe">
					<bean class="de.uniwue.dmir.heatmap.processors.visualizers.color.SimpleColorPipe">
						<constructor-arg name="toDoubleMapper">
							<bean class="de.uniwue.dmir.heatmap.processors.pixelmappers.PointSizeToPointsMapper" />
						</constructor-arg>
						<constructor-arg name="colorScheme">
							<bean class="de.uniwue.dmir.heatmap.processors.visualizers.color.ImageColorScheme" >
								<constructor-arg name="image" ref="colorImage" />
								<constructor-arg name="ranges" ref="ranges" />
							</bean> 
						</constructor-arg>
					</bean>
				</constructor-arg>
				<constructor-arg name="alphaPipe">
					<null />
				</constructor-arg>
			</bean>
		</constructor-arg>
	
	</bean>
	
	<bean id="apicVisualizationProcessor"
			class="de.uniwue.dmir.heatmap.processors.ApicPointProcessor">
			
		<constructor-arg name="folder" value="${out.folder}" />
		<constructor-arg name="visualizer" ref="simpleVisualizer" />
		<constructor-arg name="cityToTileSizeMapper">
			<bean class="de.uniwue.dmir.heatmap.util.mapper.MapMapper">
				<constructor-arg name="map">
					<map key-type="java.lang.String" value-type="java.awt.geom.Path2D">
						<entry key="Antwerp" value-ref="tileSizeAntwerp" />
						<entry key="Kassel" value-ref="tileSizeKassel" />
						<entry key="London" value-ref="tileSizeLondon" />
						<entry key="Turin" value-ref="tileSizeTurin" />
					</map>
				</constructor-arg>
			</bean>
		</constructor-arg>
		
		<property name="cityToPolygonMapper" ref="cityToPolygonMapper" />
		
		<property name="polygonStrokeColor">
			<null />
		</property>
		
		<property name="polygonFillColor">
			<bean class="java.awt.Color">
				<constructor-arg name="r" value="0" />
				<constructor-arg name="g" value="0" />
				<constructor-arg name="b" value="0" />
				<constructor-arg name="a" value="0.21" />
			</bean>
		</property>
	</bean>
	
	<bean id="writer"
			class="de.uniwue.dmir.heatmap.processors.ProxyTileProcessor">

		<constructor-arg name="processors">
			<list>
				<ref bean="apicVisualizationProcessor" />
			</list>
		</constructor-arg>
	</bean>
	
	<bean id="geoSettings" 
			class="de.uniwue.dmir.heatmap.point.sources.geo.datasources.database.TimeGeoSettings" >
		<property name="minimumTimestamp" ref="minimumTimestampReceived" />
		<property name="maximumTimestamp" ref="maximumTimestampReceived" />
	</bean>

</beans>